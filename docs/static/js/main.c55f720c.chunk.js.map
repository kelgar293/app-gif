{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","autoFocus","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OAEI,0BAAMC,SAVS,SAACC,GAEhBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAC7BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAOV,2BACAO,KAAK,OACLC,MAAOT,EACPU,SApBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,QAoBnBG,WAAS,MCxBRC,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,yBAAKC,UAAU,2CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IAC5B,2BAAIA,K,uBCPKK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEjBN,EAFiB,0DAEuCO,UAAUF,GAFjD,sDAGNG,MAAMR,GAHA,cAGjBS,EAHiB,gBAIJA,EAAKC,OAJD,uBAIhBC,EAJgB,EAIhBA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVnB,kBAchBY,GAdgB,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZtB,mBAAS,CAC/B4B,KAAK,GACLO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAC,GAEEH,EAAS,CACLT,KAAKY,EACLL,SAAS,SAIvB,CAACb,IAEIc,EDZoBK,CAAanB,GAAhCU,EAJ6B,EAIlCJ,KAAYO,EAJsB,EAItBA,QAKf,OACG,oCACC,4BAAKb,GACJa,GAAW,uBAAGjB,UAAU,oCAAb,WAEX,yBAAKA,UAAU,aAGJc,EAAOF,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,eACAW,IAAKX,EAAIhB,IACLgB,UElBXY,EAAgB,WAAO,IAAD,EACK3C,mBAAS,CAAC,WADf,mBACxB4C,EADwB,KACZ7C,EADY,KAS/B,OACI,oCACI,yCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAGQ6C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACAoB,IAAKpB,EACLA,SAAUA,UCvBlCuB,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.c55f720c.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange=(e)=>{\n        setInputValue(e.target.value);\n\n    }\n\n    const handleSubmit=(e)=>{\n        //evita el reacargo de la pagina.\n        e.preventDefault();\n        if( inputValue.trim().length>2){\n        setCategories(cats=>[inputValue,...cats]);\n        setInputValue('');\n        }\n    }\n    return (\n        //onsubmit evento evita recargo de pagina\n        <form onSubmit={handleSubmit}> \n      \n            <input \n            type=\"text\" \n            value={inputValue}\n            onChange={handleInputChange}\n            autoFocus\n            ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    // set categories es requerido desde giftexpert\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__flipInX\">\n            <img src={url} alt={title} ></img>\n    <p>{title}</p>\n        </div>\n    )\n}\n","export const getGifs = async(category )=>{\n    //encodeURI codifica texto a formato sin espacios para hacer el post and get\nconst url =`https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=JzyogdvlYMLk3a4GcVGyB76y7eBFhfrQ`;\nconst resp=await fetch(url);\nconst {data}=await resp.json();\n\nconst gifs= data.map(img=>{\n    return{\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n\n    }\n})\nreturn gifs;\n}\n","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ( {category} ) => {\n\n\n//renombra data como images\nconst {data:images,loading } = useFetchGifs(category);\n\n//para que accion se ejecute solo una vez al renderizar\n\n//se agrega [category] si la cateogria cambia vuelve a efectuar el efecto\n    return (\n       <>\n        <h3>{category}</h3>\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n       \n         <div className=\"card-grid\">\n            \n            {\n                    images.map((img)=>(\n                    <GifGridItem \n                    key={img.id}\n                    {...img}\n                    />\n                    ))\n                    }\n            \n        </div> \n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport {getGifs} from '../helpers/getGifs'\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n        .then(imgs=>{\n       \n                setState({\n                    data:imgs,\n                    loading: false\n                    });\n \n        });\n    },[category])\n\n    return state;\n}\n\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\nexport const GiftExpertApp = () => {\n    const [categories, setCategories] = useState(['Marvel']);\n \n// const handleAdd=()=>{\n//     //setCategories(['Naruto',...categories])\n//     setCategories(cats=>['Naruto',...cats]);\n// }\n\n\n    return (\n        <>\n            <h2>GifExpert</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n        \n            {/* order list */}\n            <ol>\n               {\n                //    loop para desplegar elementos \n                    categories.map(category => (\n                        <GifGrid \n                        key={category}\n                        category={category}\n                        />\n                    ))\n               }\n\n            </ol>\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './GiftExpertApp';\n\n\nReactDOM.render(\n \n    <GiftExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}